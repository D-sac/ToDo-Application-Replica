<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BackGroundPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EIQgAQhCABCEIAEIQgAQhCAP/9k=
</value>
  </data>
</root>